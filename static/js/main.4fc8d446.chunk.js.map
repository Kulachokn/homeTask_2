{"version":3,"sources":["components/Layout/Layout.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Layout","children","className","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","key","name","type","onClick","Section","title","Notification","message","App","state","handleClick","target","setState","prevState","countTotalFeedback","Object","values","reduce","sum","current","countPositiveFeedbackPercentage","Math","round","this","keys","Component","ReactDOM","render","document","getElementById"],"mappings":"yNAKeA,G,MAFA,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OAAgB,yBAAKC,UAAU,UAAUD,KCWzCE,MAZf,YAAsE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAC5C,OACI,oCACI,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,wCAAcC,EAAd,OCSGC,MAhBf,YAAsD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAC/B,OACI,oCACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,4BACIC,IAAKD,EACLE,KAAMF,EACNG,KAAK,SACLC,QAASN,GAERE,QCDNK,MATf,YAAqC,IAAnBC,EAAkB,EAAlBA,MAAOlB,EAAW,EAAXA,SACrB,OACI,oCACI,4BAAKkB,GACJlB,ICEEmB,MANf,YAAkC,IAAXC,EAAU,EAAVA,QACnB,OACI,2BAAIA,ICGSC,E,2MAEjBC,MAAQ,CACJnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTkB,YAAc,YAAuB,IAAZT,EAAW,EAApBU,OAASV,KACrB,EAAKW,UAAS,SAAAC,GACV,OAAO,eACFZ,EAAOY,EAAUZ,GAAQ,O,EAKtCa,mBAAqB,kBAAMC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,IAAS,I,EAE7FC,gCAAkC,kBAAMC,KAAKC,MAAM,EAAKb,MAAMnB,KAAO,EAAKwB,qBAAuB,M,wEAEvF,IAAD,EACwBS,KAAKd,MAA3BnB,EADF,EACEA,KAAMC,EADR,EACQA,QAASC,EADjB,EACiBA,IAChBC,EAAQ8B,KAAKT,qBACbpB,EAAqB6B,KAAKH,kCAC1BxB,EAAUmB,OAAOS,KAAKD,KAAKd,OAEjC,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASJ,MAAM,yBACX,kBAAC,EAAD,CAAiBT,QAASA,EAASC,gBAAiB0B,KAAKb,eAE7D,kBAAC,EAAD,CAASL,MAAM,aACTZ,EAAQ,EACR,kBAAC,EAAD,CAAYH,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,mBAAoBA,IACtF,kBAAC,EAAD,CAAca,QAAQ,4B,GAlCXkB,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.4fc8d446.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../Layout/Layout.css\";\n\nconst Layout = ({children}) => <div className=\"Layout\">{children}</div>;\n\nexport default Layout;","import React from \"react\";\n\nfunction Statistics({good, neutral, bad, total, positivePercentage}) {\n    return (\n        <>\n            <p>Good: {good}</p>\n            <p>Neutral: {neutral}</p>\n            <p>Bad: {bad}</p>\n            <p>Total: {total}</p>\n            <p>Positive: {positivePercentage}%</p>\n        </>\n    )\n}\n\nexport default Statistics;","import React from \"react\";\n\nfunction FeedbackOptions({options, onLeaveFeedback}) {\n    return (\n        <>\n            {options.map(option =>\n                <button\n                    key={option}\n                    name={option}\n                    type=\"button\"\n                    onClick={onLeaveFeedback}\n                >\n                    {option}\n                </button>)}\n        </>\n    )\n}\n\nexport default FeedbackOptions;","import React from \"react\";\n\nfunction Section({title, children}) {\n    return (\n        <>\n            <h2>{title}</h2>\n            {children}\n        </>\n    )\n}\n\nexport default Section;","import React from \"react\";\n\nfunction Notification({message}) {\n    return (\n        <p>{message}</p>\n    )\n}\n\nexport default Notification;","import React, {Component} from \"react\";\nimport Layout from \"./Layout/Layout\"\nimport Statistics from \"./Statistics/Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\"\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification\"\n\nexport default class App extends Component {\n\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    };\n\n    handleClick = ({target: {name}}) => {\n        this.setState(prevState => {\n            return {\n                [name]: prevState[name] + 1,\n            };\n        })\n    };\n\n    countTotalFeedback = () => Object.values(this.state).reduce((sum, current) => sum + current, 0);\n\n    countPositiveFeedbackPercentage = () => Math.round(this.state.good / this.countTotalFeedback() * 100);\n\n    render() {\n        const {good, neutral, bad} = this.state;\n        const total = this.countTotalFeedback();\n        const positivePercentage = this.countPositiveFeedbackPercentage();\n        const options = Object.keys(this.state);\n\n        return (\n            <Layout>\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions options={options} onLeaveFeedback={this.handleClick}/>\n                </Section>\n                <Section title=\"Statistic\">\n                    {(total > 0)\n                    ? <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage}/>\n                    : <Notification message=\"No feedback given\"/>}\n                </Section>\n            </Layout>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}